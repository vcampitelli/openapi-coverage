#!/usr/bin/env php
<?php

use OpenApiCoverage\Command\Command;
use OpenApiCoverage\Command\CommandEntrypoint;

require __DIR__ . '/vendor/autoload.php';

try {
    $options = \getopt('', [
        'ignore-routes:',
        'spec:',
        'debug',
    ], $restIndex);

    // Application path
    $posArgs = array_slice($argv, $restIndex);
    $basePath = $posArgs[0] ?? getcwd();

    // Ignore routes that match these regular expressions
    $options['ignore-routes'] = (empty($options['ignore-routes']))
        ? null
        : array_map('trim', explode(',', $options['ignore-routes']));

    $entrypoint = new CommandEntrypoint(
        $basePath,
        isset($options['debug']),
        $options['ignore-routes'],
        $options['spec'] ?? null
    );

    $command = new Command($entrypoint);
    $response = $command->run();

    echo json_encode($response, JSON_PRETTY_PRINT);
} catch (InvalidArgumentException $e) {
    fwrite(
        STDERR,
        "Error: {$e->getMessage()}" . PHP_EOL .
        "Usage: {$argv[0]} [options] [application-path]" . PHP_EOL .
        PHP_EOL .
        'Options:' . PHP_EOL .
        '  --ignore-routes <regex>   Ignore routes that match these regular expressions (comma-separated)' . PHP_EOL .
        '  --spec <file>             OpenAPI specification file. If not specified, will try to find an ' . PHP_EOL .
        '                            openapi.yaml at the root directory or inside a docs/ folder' . PHP_EOL .
        '  --debug                   Prints debugging information' . PHP_EOL
    );
    $code = $e->getCode();
    die(($code > 0) ? $code : 1);
} catch (Throwable $e) {
    fwrite(
        STDERR,
        "Error: {$e->getMessage()}"
    );
    $code = $e->getCode();
    die(($code > 0) ? $code : 1);
}
